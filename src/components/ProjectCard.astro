---
export interface Props {
  title: string;
  description: string;
  image: string;
  technologies: string[];
  liveUrl: string;
  githubUrl?: string;
  date?: string;
  status?: 'completed' | 'in-progress' | 'maintained';
  category?: string;
  complexity?: 'simple' | 'intermediate' | 'advanced';
}

const { 
  title, 
  description, 
  image, 
  technologies, 
  liveUrl, 
  githubUrl, 
  date,
  status = 'completed',
  category = 'web-app',
  complexity = 'intermediate'
} = Astro.props;

const getStatusColor = (status: string) => {
  switch (status) {
    case 'completed': return 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300';
    case 'in-progress': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300';
    case 'maintained': return 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300';
    default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300';
  }
};

const getComplexityColor = (complexity: string) => {
  switch (complexity) {
    case 'advanced': return 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300';
    case 'intermediate': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300';
    case 'simple': return 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300';
    default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300';
  }
};
---

<div class="group relative bg-white dark:bg-gray-800 rounded-xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden transform hover:-translate-y-2 hover:scale-105" data-category={category}>
  
  <!-- Status Badges -->
  <div class="absolute top-4 right-4 z-10 flex gap-2">
    <span class={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(status)}`}>
      {status.replace('-', ' ').toUpperCase()}
    </span>
    <span class={`px-2 py-1 rounded-full text-xs font-medium ${getComplexityColor(complexity)}`}>
      {complexity.toUpperCase()}
    </span>
  </div>
  
  <div class="aspect-video overflow-hidden bg-gray-100 dark:bg-gray-700 relative">
    <img 
      src={image} 
      alt={title}
      class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
    />
  </div>
  
  <div class="p-6">
    <div class="flex items-start justify-between mb-2">
      <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
        {title}
      </h3>
      {date && (
        <span class="text-sm text-gray-500 dark:text-gray-400">
          {date}
        </span>
      )}
    </div>
    
    <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
      {description}
    </p>
    
    <div class="flex flex-wrap gap-2 mb-4">
      {technologies.map((tech) => (
        <span class="px-3 py-1 text-sm bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300 rounded-full hover:bg-primary-200 dark:hover:bg-primary-900/50 transition-colors cursor-default">
          {tech}
        </span>
      ))}
    </div>
    
    <div class="flex gap-3">
      {liveUrl !== "#" ? (
        <a 
          href={liveUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="flex-1 bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-center transition-all duration-200 hover:shadow-lg transform hover:-translate-y-0.5 font-medium"
        >
          <span class="flex items-center justify-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
            </svg>
            Live Demo
          </span>
        </a>
      ) : (
        <div class="flex-1 bg-gray-400 dark:bg-gray-600 text-white px-4 py-2 rounded-lg text-center font-medium cursor-not-allowed">
          <span class="flex items-center justify-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            In Development
          </span>
        </div>
      )}
      
      {githubUrl && githubUrl !== "#" && (
        <a 
          href={githubUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-all duration-200 hover:shadow-md transform hover:-translate-y-0.5"
        >
          <span class="flex items-center gap-2">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
            GitHub
          </span>
        </a>
      )}
    </div>
  </div>
</div>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>